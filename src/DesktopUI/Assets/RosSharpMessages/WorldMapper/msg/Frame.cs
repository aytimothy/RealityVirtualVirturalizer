/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using Newtonsoft.Json;

using RosSharp.RosBridgeClient.MessageTypes.Std;

namespace RosSharp.RosBridgeClient.MessageTypes.WorldMapper
{
    public class Frame : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "world_mapper/Frame";

        public uint seq;
        public Time timestamp;
        public string frameid;
        public float posX;
        public float posY;
        public float posZ;
        public float rotX;
        public float rotY;
        public float rotZ;
        public float accX;
        public float accY;
        public float accZ;
        public float gyrX;
        public float gyrY;
        public float gyrZ;
        public float angle_min;
        public float angle_max;
        public float angle_increment;
        public float range_min;
        public float range_max;
        public float[] ranges;
        public float[] intensities;
        public byte[] img;
        public string imgfmt;

        public Frame()
        {
            this.seq = 0;
            this.timestamp = new Time();
            this.frameid = "";
            this.posX = 0.0f;
            this.posY = 0.0f;
            this.posZ = 0.0f;
            this.rotX = 0.0f;
            this.rotY = 0.0f;
            this.rotZ = 0.0f;
            this.accX = 0.0f;
            this.accY = 0.0f;
            this.accZ = 0.0f;
            this.gyrX = 0.0f;
            this.gyrY = 0.0f;
            this.gyrZ = 0.0f;
            this.angle_min = 0.0f;
            this.angle_max = 0.0f;
            this.angle_increment = 0.0f;
            this.range_min = 0.0f;
            this.range_max = 0.0f;
            this.ranges = new float[0];
            this.intensities = new float[0];
            this.img = new byte[0];
            this.imgfmt = "";
        }

        public Frame(uint seq, Time timestamp, string frameid, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, float accX, float accY, float accZ, float gyrX, float gyrY, float gyrZ, float angle_min, float angle_max, float angle_increment, float range_min, float range_max, float[] ranges, float[] intensities, byte[] img, string imgfmt)
        {
            this.seq = seq;
            this.timestamp = timestamp;
            this.frameid = frameid;
            this.posX = posX;
            this.posY = posY;
            this.posZ = posZ;
            this.rotX = rotX;
            this.rotY = rotY;
            this.rotZ = rotZ;
            this.accX = accX;
            this.accY = accY;
            this.accZ = accZ;
            this.gyrX = gyrX;
            this.gyrY = gyrY;
            this.gyrZ = gyrZ;
            this.angle_min = angle_min;
            this.angle_max = angle_max;
            this.angle_increment = angle_increment;
            this.range_min = range_min;
            this.range_max = range_max;
            this.ranges = ranges;
            this.intensities = intensities;
            this.img = img;
            this.imgfmt = imgfmt;
        }
    }
}
