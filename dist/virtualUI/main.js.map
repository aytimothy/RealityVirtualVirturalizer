{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dialogs/confirm-dialog/confirm-dialog.component.ts","./src/app/dialogs/confirm-dialog/confirm-dialog.component.html","./src/app/dialogs/file-dialog/file-dialog.component.ts","./src/app/dialogs/file-dialog/file-dialog.component.html","./src/app/dialogs/rosconfig-dialog/rosconfig-dialog.component.ts","./src/app/dialogs/rosconfig-dialog/rosconfig-dialog.component.html","./src/app/filesystem/filesystem.component.ts","./src/app/filesystem/filesystem.component.html","./src/app/services/data.service.ts","./src/app/services/dialog.service.ts","./src/app/services/rosbridge.service.ts","./src/app/services/sidenav.service.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/statusbar/statusbar.component.ts","./src/app/statusbar/statusbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'dashboard', component: DashboardComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { SidenavService } from './services/sidenav.service';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  @ViewChild('left') public left: MatSidenav;\n  @ViewChild('right') public right: MatSidenav;\n\n  constructor(\n    private __SidenavService: SidenavService\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.__SidenavService.setSidenav(this.left, this.right);\n  }\n}\n\n","<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</head>\n\n<body>\n  <!-- sidenav  -->\n  <mat-sidenav-container autosize>\n\n    <!-- left sidenav  panel -->\n    <mat-sidenav #left id=\"left-sidenav\" mode=\"side\" position=\"start\" opened>\n      <app-sidenav></app-sidenav>\n    </mat-sidenav>\n\n    <!-- right sidenav panel -->\n    <mat-sidenav #right id=\"right-sidenav\" mode=\"side\" position=\"end\" opened>\n      <app-filesystem></app-filesystem>\n    </mat-sidenav>\n    <!-- end of right side panel-->\n\n    <mat-sidenav-content>\n      <main>\n        <router-outlet>\n        </router-outlet>\n      </main>\n      <app-statusbar></app-statusbar>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</body>","// import modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\n// import components\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { StatusbarComponent } from './statusbar/statusbar.component';\nimport { FilesystemComponent } from './filesystem/filesystem.component';\nimport { ConfirmDialogComponent } from './dialogs/confirm-dialog/confirm-dialog.component';\nimport { FileDialogComponent } from './dialogs/file-dialog/file-dialog.component';\nimport { RosconfigDialogComponent } from './dialogs/rosconfig-dialog/rosconfig-dialog.component';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n// import services\nimport { BridgeService } from './services/rosbridge.service';\nimport { SidenavService } from './services/sidenav.service';\nimport { DialogService } from './services/dialog.service';\nimport { DataService } from './services/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    StatusbarComponent,\n    FilesystemComponent,\n    ConfirmDialogComponent,\n    SidenavComponent,\n    RosconfigDialogComponent,\n    FileDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatSidenavModule,\n    MatTreeModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatMenuModule\n  ],\n  providers: [\n    BridgeService,\n    SidenavService,\n    DialogService,\n    DataService\n  ],\n  entryComponents: [ConfirmDialogComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { BridgeService } from '../services/rosbridge.service';\nimport * as ROS3D from 'ros3d';\nimport * as THREE from 'three/build/three';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\n\nexport class DashboardComponent implements AfterViewInit {\n\n  @ViewChild('canvas', { read: ElementRef, static: false }) elementView: ElementRef;\n\n  private viewer: ROS3D.Viewer\n\n  public listeningForMessages: boolean = false;\n  public isCanvasDisplayed: boolean = true;\n  public isImageDisplayed: boolean = false;\n\n  private msg_listener: any;\n  public frame: any;\n\n  public canvasWidth: number;\n  public canvasHeight: number;\n\n  constructor(\n    public __BridgeService: BridgeService,\n    private elementRef: ElementRef\n  ) { }\n\n  ngAfterViewInit() {\n    // retrieve the width and height of the canvas div dynamically  \n    this.canvasWidth = this.elementRef.nativeElement.offsetWidth;\n    this.canvasHeight = this.elementRef.nativeElement.offsetHeight;\n  }\n\n  public startListening(): void {\n    this.msg_listener = this.__BridgeService.subscribeToTopic('/output', 'world_mapper/Frame')\n    // listen for basic messages\n    this.listeningForMessages = true;\n    this.msg_listener.subscribe((frame: any) => {\n      // output entire frame to console\n      console.log(frame);\n      // update the current frame\n      this.frame = frame;\n      //this.generatePoint(frame);\n    });\n    this.create3DCanvas();\n  }\n\n  public stopListening(): void {\n    this.msg_listener.unsubstribe();\n    this.listeningForMessages = false;\n    this.isCanvasDisplayed = false;\n  }\n\n  /*private generatePoint(response: any): void {\n   var origin = new Vector3(response.posX, response.posY, response.posZ);\n   var directions = this.generateDirections(new Vector3(response.rotX, response.rotY, response.rotZ));\n   var points = []\n   for (let i = 0; i < response.distances.length; i++)\n       points = origin + (direction[i] * response.distances[i])\n   generateBox(point, 0.0001)\n  }\n\n  private generateDirections(x, y, z): THREE.Vector3[] {\n   that stupid rotational matrix thing again\n  }\n\n  private generateBox(pos, size): THREE.Object3D {\n   //make points at (1, 1, 1), (1, 1, -1), (1, -1, 1), (1, -1, -1), etc.\n   var 1 = pos + (0.5 * size), -1 = pos - (0.5 * size), for respective axis\n   //join up three four points (or three if we have to make triangles)\n  // add material\n  }*/\n\n  public onResize(event: any): void {\n    /* The event will only detect window resize events, \n    Therefore we need to substract 520 pixels from the innerWidth manually \n    to take into account the two side navigation panels which are both 260*/\n    this.canvasWidth = event.target.innerWidth - 520;\n    this.canvasHeight = event.target.innerHeight - 164;\n\n    // ensure the viewer is created before calling resizing it\n    if (this.viewer != undefined) {\n      this.viewer.resize(this.canvasWidth, this.canvasHeight);\n    }\n  }\n\n  public toggleImages(): void {\n    if (this.isImageDisplayed) {\n      this.isImageDisplayed = false;\n    }\n    else {\n      this.isImageDisplayed = true;\n      this.isCanvasDisplayed = false;\n    }\n  }\n\n  public toggleCanvas(): void {\n    if (this.isCanvasDisplayed) {\n      this.isCanvasDisplayed = false;\n    }\n    else {\n      this.isImageDisplayed = false;\n      this.isCanvasDisplayed = true;\n    }\n  }\n\n  public create3DCanvas(): void {\n\n    this.isCanvasDisplayed = true;\n\n    // create the main 3d viewer.\n    this.viewer = new ROS3D.Viewer({\n      divID: 'canvas',\n      width: this.canvasWidth,\n      height: this.canvasHeight,\n      antialias: true\n    });\n\n    // create background grid in the viewer\n    this.viewer.addObject(new ROS3D.Grid());\n  }\n}\n","<div *ngIf=\"__BridgeService.isConnected\" class=\"row no-gutters\">\n  <!-- toolbar displays dashboard options-->\n  <mat-toolbar id=\"options-bar\">\n    <span>\n      <button mat-flat-button (click)=\"startListening()\" *ngIf=\"!listeningForMessages\">\n        <mat-icon>sync_alt</mat-icon>\n        Listen for messages\n      </button>\n      <button mat-flat-button (click)=\"stopListening()\" *ngIf=\"listeningForMessages\">\n        <mat-icon>sync_alt</mat-icon>\n        Stop Listening\n      </button>\n    </span>\n    <span class=\"spacer\"></span>\n    <span *ngIf=\"listeningForMessages\">\n      <button mat-icon-button matTooltip=\"Display Options\" [matMenuTriggerFor]=\"menu\" #menuTrigger=\"matMenuTrigger\"\n        (click)=\"menuTrigger.openMenu()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\">\n        <span (mouseleave)=\"menuTrigger.closeMenu()\">\n          <button mat-button matTooltip=\"Toggle Images\" (click)=\"toggleImages()\">\n            <mat-icon>collections</mat-icon>\n            Toggle Images\n          </button>\n          <mat-divider></mat-divider>\n          <button mat-button matTooltip=\"Toggle 3D Canvas\" (click)=\"toggleCanvas()\">\n            <mat-icon>3d_rotation</mat-icon>\n            Toggle Canvas\n          </button>\n        </span>\n      </mat-menu>\n    </span>\n  </mat-toolbar>\n  <!-- toolbar with coordinates and sequence number-->\n  <mat-toolbar id=\"coordinates-bar\" color=\"primary\" *ngIf=\"listeningForMessages\">\n    <span class=\"spacer\"><strong>Seq: </strong>\n      <p *ngIf=\"frame\">{{frame.seq}}</p>\n    </span>\n    <span class=\"spacer\"><strong>posX: </strong>\n      <p *ngIf=\"frame\">{{frame.posX}}</p>\n    </span>\n    <span class=\"spacer\"><strong>posY: </strong>\n      <p *ngIf=\"frame\">{{frame.posY}}</p>\n    </span>\n    <span><strong>posZ: </strong>\n      <p *ngIf=\"frame\">{{frame.posZ}}</p>\n    </span>\n  </mat-toolbar>\n  <!-- card that displays either the canvas or images-->\n  <div *ngIf=\"isImageDisplayed && frame\" class=\"image_wrapper\">\n    <img src=\"data:image/png;base64, {{frame.image}}\" alt=\"frame image\">\n  </div>\n  <div [hidden]=\"!isCanvasDisplayed\" id=\"canvas\" #map (window:resize)=\"onResize($event)\"></div>\n</div>\n<!-- seperate row that displays an alert message that rosbridge is not connected-->\n<div class=\"container-fluid\" *ngIf=\"!__BridgeService.isConnected\">\n  <div class=\"image_wrapper\">\n    <img src=\"assets/error.png\" alt=\"error\">\n    <br>\n    <button mat-button>\n      <mat-icon>error</mat-icon><strong> Please connect to RosBrdge</strong>\n    </button>\n  </div>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data, public __DialogRef: MatDialogRef<ConfirmDialogComponent>) { }\n\n  onDismiss(): void {\n    this.__DialogRef.close(false);\n  }\n  onConfirm(): void {\n    this.__DialogRef.close(true);\n  }\n}","<h1 mat-dialog-title>\n    <mat-icon>{{data.icon}}</mat-icon>\n    {{data.title}}\n</h1>\n\n<div mat-dialog-content>\n    <p>{{data.message}}</p>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Continue</button>\n    <button mat-raised-button (click)=\"onDismiss()\">Cancel</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-file-dialog',\n  templateUrl: './file-dialog.component.html',\n  styleUrls: ['./file-dialog.component.scss']\n})\nexport class FileDialogComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data, public __DialogRef: MatDialogRef<FileDialogComponent>) { }\n\n\n  onDismiss(): void {\n    this.__DialogRef.close(false);\n  }\n}\n","<h1 mat-dialog-title>\n    <mat-icon>file_copy</mat-icon>\n    {{data.name}}\n</h1>\n\n<div mat-dialog-content>\n    <p>{{data.data}}</p>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onDismiss()\">Close</button>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\nimport { BridgeService } from '../../services/rosbridge.service';\n\n@Component({\n  selector: 'app-rosconfig-dialog',\n  templateUrl: './rosconfig-dialog.component.html',\n  styleUrls: ['./rosconfig-dialog.component.scss']\n})\nexport class RosconfigDialogComponent {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public __DialogRef: MatDialogRef<RosconfigDialogComponent>,\n    private __BridgeService: BridgeService\n  ) { }\n\n  configForm = new FormGroup({\n    host: new FormControl('', [Validators.required]),\n    port: new FormControl('', [Validators.required]),\n  });\n\n  get host(): any { return this.configForm.get('host'); }\n  get port(): any { return this.configForm.get('port'); }\n\n  onCancel(): void {\n    this.__DialogRef.close(false);\n  }\n  \n  onSet(): void {\n    if (this.configForm.valid) {\n      this.__BridgeService.setCustomAddress(this.configForm.getRawValue())\n      this.__DialogRef.close(true);\n    }\n  }\n\n}\n","<button mat-button mat-dialog-title>\n  <mat-icon>settings</mat-icon>\n  Rosbridge Configuration\n</button>\n<div mat-dialog-content>\n  <p>Set a custom host and port for rosbridge websocket connection</p>\n</div>\n<form [formGroup]=\"configForm\">\n  <table>\n    <tr>\n      <td><strong>ws://</strong></td>\n      <td>\n        <mat-form-field mat-line>\n          <input matInput type=\"text\" formControlName=\"host\" placeholder=\"Host\" required>\n        </mat-form-field>\n      </td>\n      <td><strong>:</strong></td>\n      <td>\n        <mat-form-field mat-line [style.width.px]=70>\n          <input matInput type=\"text\" formControlName=\"port\" placeholder=\"Port\" required>\n        </mat-form-field>\n      </td>\n    </tr>\n  </table>\n</form>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onSet()\">Set</button>\n  <button mat-raised-button (click)=\"onCancel()\">Cancel</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { DialogService } from '../services/dialog.service';\n\n@Component({\n  selector: 'app-filesystem',\n  templateUrl: './filesystem.component.html',\n  styleUrls: ['./filesystem.component.scss']\n})\nexport class FilesystemComponent implements OnInit {\n\n  selectedFolderIndex: number;\n  selectedFolderName: string;\n  selectedItemIndex: number;\n\n  directoryList: any = [];\n\n  constructor(\n    private __DataService: DataService,\n    private __DialogService: DialogService\n  ) { }\n\n  ngOnInit() {\n    // get root directory listing on page initialisation\n    this.directoryListing();\n  }\n\n  public directoryListing() {\n    // reset any values in template\n    this.selectedFolderIndex = null;\n    this.selectedFolderName = null;\n    // request to get the items in the root directory\n    this.__DataService.requestRootDirectory().subscribe((rootDirectoryListing: any) => {\n      this.directoryList = rootDirectoryListing;\n    });\n  }\n\n  public navigateFileSystem(index: number, item: any): void {\n    // check if the item is a directory\n    if (item.isDir) {\n      // assign folder values for template\n      this.selectedFolderIndex = index;\n      this.selectedFolderName = item.name;\n      // further navigate through the filesystem\n      this.__DataService.navigateDirectory(item).subscribe((list: any) => {\n        this.directoryList = list;\n      });\n    }\n    else if (item.ext == '.bson') {\n      // send a request to get the data for the file\n      this.__DataService.requestReadFile(item).subscribe((file: any) => {\n        //ensure the file still exists\n        if (file.exists) {\n          // output the data in a dialog\n          this.__DialogService.openFileDialog(file)\n            .afterClosed()\n            .subscribe()\n        }\n        else {\n          this.__DialogService.openConfirmDialog(\n            'The file no longer exists', 'Whoops', 'warning')\n            .afterClosed()\n            .subscribe()\n        }\n      });\n    }\n    else {\n      // send a request to get the data for the file\n      this.__DataService.requestReadFile(item).subscribe((file: any) => {\n        //ensure the file still exists\n        if (file.exists) {\n          // output the data in a dialog\n          this.__DialogService.openFileDialog(file)\n            .afterClosed()\n            .subscribe()\n        }\n        else {\n          this.__DialogService.openConfirmDialog(\n            'The file no longer exists', 'Whoops', 'warning')\n            .afterClosed()\n            .subscribe()\n        }\n\n      });\n    }\n  }\n\n}\n","<div class=\"sidenav-header\">\n  <h2 style=\"margin:0;\">\n    <mat-icon>file_copy</mat-icon> Browse Data\n  </h2>\n</div>\n<button mat-button *ngIf=\"selectedFolderName\" (click)=\"directoryListing()\">\n  <mat-icon>keyboard_arrow_left</mat-icon>\n  {{selectedFolderName}}\n</button>\n<button mat-button (click)=\"directoryListing()\">\n  <mat-icon>refresh</mat-icon>\n  Refresh\n</button>\n<mat-nav-list>\n  <mat-list-item *ngFor=\"let item of directoryList; let index = index\" (click)=\"navigateFileSystem(index, item)\"\n    [class.active]=\"selectedItemIndex === index\">\n    <div matLine>\n      <button mat-button>\n        <mat-icon *ngIf=\"item.isDir\" mat-list-icon>folder</mat-icon>\n        <mat-icon *ngIf=\"!item.isDir\" mat-list-icon>file_copy</mat-icon>\n        {{item.name}}\n      </button>\n    </div>\n    <mat-divider></mat-divider>\n    <button mat-icon-button>\n      <mat-icon mat-list-icon>keyboard_arrow_right</mat-icon>\n    </button>\n  </mat-list-item>\n</mat-nav-list>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst SERVER_URL = window.location.href + 'filesys';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  requestRootDirectory() {\n    return this.http.get(SERVER_URL + `/root_list`);\n  }\n\n  navigateDirectory(file: any) {\n    return this.http.post(SERVER_URL + `/navigate_dir`, file, httpOptions);\n  }\n\n  requestReadFile(file: any) {\n    return this.http.post(SERVER_URL + `/readfile`, file, httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from '../dialogs/confirm-dialog/confirm-dialog.component';\nimport { RosconfigDialogComponent } from '../dialogs/rosconfig-dialog/rosconfig-dialog.component';\nimport { FileDialogComponent } from '../dialogs/file-dialog/file-dialog.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openConfirmDialog(msg: string, title: string, ico: string) {\n    return this.dialog.open(ConfirmDialogComponent, {\n      width: '30%',\n      disableClose: true,\n      data: {\n        title: title,\n        message: msg,\n        icon: ico\n      }\n    });\n  }\n\n  openFileDialog(file: any) {\n    return this.dialog.open(FileDialogComponent, {\n      width: '50%',\n      disableClose: true,\n      data: {\n        name: file.name,\n        data: JSON.stringify(file.data)\n      }\n    });\n  }\n\n  openRosconfigDialog() {\n    return this.dialog.open(RosconfigDialogComponent, {\n      width: '40%',\n      disableClose: true,\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as ROSLIB from 'roslib';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BridgeService {\n\n  // set default host and port values\n  private host: string = window.location.hostname;\n  private port: string = \"9090\";\n\n  // websocket connection\n  public socket: ROSLIB.Ros;\n\n  // connection status\n  public isConnected: boolean = false;\n\n  constructor() { }\n\n  public setCustomAddress(config: any) {\n    this.host = config.host;\n    this.port = config.port;\n\n    // if already connected close old connection\n    if (this.isConnected && this.socket) {\n      this.socket.close();\n      this.socket = null;\n      this.isConnected = false;\n    }\n\n    // establish a new connection after changes\n    this.estabishConnection((response) => {\n      console.log(response);\n    });\n  }\n\n  public estabishConnection(next): boolean {\n    if (this.isConnected) { // check if there is already a connection\n      return this.isConnected;\n    }\n\n    // establish a new ws connection\n    this.socket = new ROSLIB.Ros({\n      url: `ws://${this.host}:${this.port}`\n    });\n\n    this.socket.on('connection', (response: any) => { // if the websocket connection is sucessfull\n      this.isConnected = true;\n      console.log(`Success! Connected to rosbridge on: ${this.host}:${this.port}`)\n      next(response)\n    });\n\n    this.socket.on('error', (response: any) => { // if the websocket connection failed\n      this.isConnected = false;\n      console.log(`Error! Failed to connect to rosbridge on: ${this.host}:${this.port}`)\n      next(response)\n    });\n\n    this.socket.on('close', (response: any) => { // if the websocket connection closes\n      this.isConnected = false;\n      console.log(`Closed rosbridge connection on: ${this.host}:${this.port}`)\n      next(response)\n    });\n  }\n\n  public subscribeToTopic(name: string, messageType: string): ROSLIB.Topic { // subscribe to a custom ros topic\n    return new ROSLIB.Topic({\n      ros: this.socket,\n      name: name,\n      messageType: messageType\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Injectable({\n  providedIn: 'root'\n})\n/* The code below was copied from stackexchange which adds the ability\n    to toggle the sidenav from a seperate component \n    https://stackoverflow.com/questions/48073057/open-close-sidenav-from-another-component\n*/\nexport class SidenavService {\n  private left: MatSidenav;\n  private right: MatSidenav;\n  constructor() { }\n\n  public setSidenav(left: MatSidenav, right: MatSidenav): void {\n    this.left = left;\n    this.right = right;\n  }\n\n  public toggleRight(): void {\n    this.right.toggle();\n  }\n\n  public toggleLeft(): void {\n    this.left.toggle();\n  }\n}\n","import { Component } from '@angular/core';\nimport { DialogService } from '../services/dialog.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent {\n\n  constructor(private __DialogService: DialogService) { }\n\n  configureRosBridge() {\n    this.__DialogService.openRosconfigDialog().afterClosed().subscribe()\n  }\n}\n","  <div class=\"sidenav-header\">\n    <mat-icon>3d_rotation</mat-icon>\n    <span style=\"margin:0;\" class=\"mat-display-1\">Lidar</span>\n  </div>\n  <mat-nav-list>\n    <section class=\"mat-typography\">\n      <a mat-list-item [routerLink]=\"'dashboard'\">\n        <mat-icon>dashboard</mat-icon>Dashboard\n      </a>\n      <a mat-list-item>\n        <mat-icon>cast</mat-icon>Start Scanning\n      </a>\n      <a mat-list-item>\n        <mat-icon>settings_overscan</mat-icon>Calibrate Position\n      </a>\n      <a mat-list-item (click)=\"configureRosBridge()\">\n        <mat-icon>settings</mat-icon>Configure Rosbridge\n      </a>\n    </section>\n  </mat-nav-list>\n  <section class=\"img-container\">\n    <h4 class=\"headline-title\">Powered by</h4>\n    <img matListAvatar src=\"assets/ros_logo.png\">\n  </section>\n","import { Component, OnInit } from '@angular/core';\nimport { BridgeService } from '../services/rosbridge.service';\nimport { SidenavService } from '../services/sidenav.service';\n\n@Component({\n  selector: 'app-statusbar',\n  templateUrl: './statusbar.component.html',\n  styleUrls: ['./statusbar.component.scss']\n})\nexport class StatusbarComponent implements OnInit {\n\n  // status icons\n  bridge_status_icon: string = \"phonelink\";\n  scan_status_icon: string = 'close'\n\n  // status messages\n  bridge_status_msg: string = \"Connecting...\";\n  scan_status_msg: string = \"Disabled\";\n\n  loading: boolean = true;\n\n  constructor(\n    private __BridgeService: BridgeService,\n    private __SidenavService: SidenavService) { }\n\n  ngOnInit(): void {\n    // connect to rosbridge\n    this.__BridgeService.estabishConnection((response: any) => {\n      if (response.type == \"open\") {\n        this.bridge_status_msg = \"Connected\";\n        this.bridge_status_icon = 'phonelink';\n        this.loading = false;\n      }\n      if (response.type == 'close') {\n        this.bridge_status_msg = 'Connection Closed';\n        this.bridge_status_icon = 'close';\n        this.loading = false;\n      }\n      if (response.type == 'error') {\n        this.bridge_status_msg = \"Connection Failed\";\n        this.bridge_status_icon = 'error';\n        this.loading = false;\n      }\n    });\n  }\n\n  // open/close left side navigation pane\n  toggleLSideNav(): void {\n    this.__SidenavService.toggleLeft();\n  }\n\n  // open/close right side navigation pane\n  toggleRSideNav(): void {\n    this.__SidenavService.toggleRight();\n  }\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <button mat-icon-button mat-raised-button color=\"primary\" (click)=\"toggleLSideNav()\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n    <span class=\"span\">\n      Scanner Status:\n      <button mat-flat-button>\n        <mat-icon>{{scan_status_icon}}</mat-icon>\n        {{scan_status_msg}}\n      </button>\n    </span>\n    <span class=\"span\">\n      Rosbridge Status:\n      <button *ngIf=\"!loading\" mat-flat-button>\n        <mat-icon>{{bridge_status_icon}}\n        </mat-icon>\n        {{bridge_status_msg}}\n      </button>\n      <button *ngIf=\"loading\" mat-flat-button>\n        <mat-icon>\n          <mat-spinner color=\"primary\" diameter=\"20\">\n          </mat-spinner>\n        </mat-icon>\n        {{bridge_status_msg}}\n      </button>\n    </span>\n    <button mat-icon-button mat-raised-button color=\"primary\" (click)=\"toggleRSideNav()\">\n      <mat-icon>arrow_forward</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}